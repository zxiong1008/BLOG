@model BLOG.Models.POST

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@*multipart form - something beyong the form*@
@using (Html.BeginForm("Create", "POSTs", FormMethod.Post, new { enctype = "Multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>POST</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.CREATED, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CREATED, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CREATED, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.UPDATED, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UPDATED, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UPDATED, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.TITLE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TITLE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TITLE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BODY, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.BODY, 10, 0, htmlAttributes: new { @class = "form-control", id = "textarea" })
                @Html.ValidationMessageFor(model => model.BODY, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MEDIA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input name="image" type="file" class="form-control" id="fileUpload" />
                @*@Html.EditorFor(model => model.MEDIA, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.MEDIA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PUBLISH, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-sm-10 col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PUBLISH)
                    @Html.ValidationMessageFor(model => model.PUBLISH, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<br /><br /><br />

@section scripts{
    <script type="text/javascript">
        tinymce.init({
            selector: "textarea",
            toolbar: "insertfile undo redo | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link",
            statusbar: false,
            menubar: false
        });
    </script>
}
